# Generated by Django 3.1.1 on 2021-03-06 16:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('entitled_features', models.TextField(blank=True, default='joker_feature,Einsch√§tzungstest,Dashboard,Theorie,Aufgaben')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8)),
                ('answers', models.CharField(blank=True, max_length=1024)),
                ('correct', models.BooleanField(blank=True, default=False)),
                ('skipped', models.BooleanField(blank=True, default=False)),
                ('comment', models.CharField(blank=True, default='', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('question', models.CharField(max_length=1024)),
                ('correctAnswers', models.CharField(max_length=1024)),
                ('validation_type', models.CharField(choices=[('standardValidation', ''), ('multipleStrings', 'multipleStrings'), ('singleFraction', 'singleFraction')], max_length=255)),
                ('appendix', models.CharField(blank=True, max_length=1024)),
                ('hint', models.CharField(blank=True, max_length=1024)),
                ('imageSrc', models.CharField(blank=True, max_length=1024)),
                ('set_difficulty', models.IntegerField(default=0)),
                ('facility', models.FloatField(default=0.5)),
                ('facility_updated_on', models.DateTimeField(auto_now_add=True)),
                ('number_of_answers', models.IntegerField(default=0)),
                ('difficulty', models.IntegerField(default=3)),
                ('difficulty_updated_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('html', models.CharField(blank=True, max_length=8191)),
                ('answers_since_update', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TheoryPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('html', models.CharField(blank=True, max_length=8191)),
                ('subtopic', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='profiles_api.subtopic')),
                ('topic', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='profiles_api.topic')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('html', models.CharField(blank=True, max_length=8191)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('creation_type', models.CharField(default='standard', max_length=255)),
                ('questions', models.ManyToManyField(to='profiles_api.Question')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles_api.topic'),
        ),
        migrations.AddField(
            model_name='subtopic',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='dependencies',
            field=models.ManyToManyField(blank=True, related_name='question_dependencies', to='profiles_api.Subtopic'),
        ),
        migrations.AddField(
            model_name='question',
            name='subtopic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question_subtopic', to='profiles_api.subtopic'),
        ),
        migrations.AddField(
            model_name='question',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles_api.topic'),
        ),
        migrations.AddField(
            model_name='question',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProfileFeedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_text', models.CharField(max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proficiency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('answers_since_update', models.IntegerField(default=0)),
                ('number_of_answers', models.IntegerField(default=0)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles_api.subtopic')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompletedTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=255)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DecimalField(blank=True, decimal_places=2, max_digits=8)),
                ('comment', models.CharField(blank=True, max_length=1024)),
                ('answers', models.ManyToManyField(blank=True, to='profiles_api.Answer')),
                ('test', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='profiles_api.test')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles_api.question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
